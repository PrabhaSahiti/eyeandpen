# -*- coding: utf-8 -*-
"""count_msgTypes

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qFf9jx-6DXxxvPM5Icn5QYO0QYu8gxJg
"""

"""
Counts the number of times each message type occurs
Inputs
  - msgStatements: list of message statements from raw file
  - msgTimes: list of timestamps of message statements 
  - trialIndex: dataframe of all start and end time of every trial
Outputs
  - statement_count: dataframe of all the unique statements and their number of occurances
"""
def count_msgType(msgStatements, msgTimes, trialIndex, patientNum):
  state_count = list(dict.fromkeys(msgStatements))
  count_rowCount = len(state_count)
  #print('condensed length: '+str(count_rowCount))
  startZeroes = [0]*count_rowCount
  comb = {'Message':state_count,'Count':startZeroes}
  statement_count = pd.DataFrame(comb, columns = ['Message', 'Count'])
  msg_rowCount = len(msgStatements)
  print(msg_rowCount)
  curr_count = 0
  while curr_count < count_rowCount:
    currMsg = statement_count.iloc[curr_count,0]
    curr_msg = 0
    #print(curr_count)
    while curr_msg < msg_rowCount: 
      #print(currMsg+' compared to '+msgStatements[curr_msg])
      if currMsg in msgStatements[curr_msg]:
        statement_count.iloc[curr_count, 1] = statement_count.iloc[curr_count, 1] + 1
      curr_msg = curr_msg + 1
    curr_count = curr_count + 1
  display(statement_count)
  return statement_count